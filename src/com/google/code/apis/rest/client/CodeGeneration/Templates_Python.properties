# abstract rest request super class
restRequestClass = \n# class auto-generated by REST Compile \n\
class RestRequest: \n\
\t&quot;&quot;&quot;super class responsable for REST requests and error checks&quot;&quot;&quot;\n\
\n\
\t# init function \n\
\tdef __init__(self, ): \n\
\t\t# provide user and password for HTTP AUTH \n\
\t\tself.user = &apos;&apos; \n\
\t\tself.password = &apos;&apos; \n\
\n\
\tdef do_get_call(self, uri): \n\
\t\t&quot;&quot;&quot;the GET function&quot;&quot;&quot; \n\
\n\
\t\t# HTTP related functions (urllib2 for error handling)\n\
\t\timport urllib2 \n\
\t\timport sys \n\
\t\timport base64 \n\
\n\
\t\trequest = urllib2.Request(uri) \n\
\n\
\t\t# provide credentials if they&apos;re established \n\
\t\tif self.user and self.password: \n\
\t\t\tbase64string = base64.encodestring(&apos;%s:%s&apos; % (self.user, self.password))[:-1] \n\
\t\t\tauthheader =  "Basic %s" % base64string \n\
\t\t\trequest.add_header("Authorization", authheader) \n\
\n\
\t\ttry: \n\
\t\t\tresponse = urllib2.urlopen(request).read() \n\
\t\texcept urllib2.HTTPError, e: \n\
{0} \n\
\t\t\tsys.exit("HTTP error: %d" % e.code) \n\
\t\texcept urllib2.URLError, e: \n\
\t\t\tsys.exit("Network error: %s" % e.reason.args[1]) \n\
\n\
\t\treturn response \n\
\n\
\tdef do_post_call(self, uri, post_args): \n\
\t\t&quot;&quot;&quot;the POST function&quot;&quot;&quot; \n\
\n\
\t\t# HTTP related functions (urllib2 for error handling)\n\
\t\timport urllib2 \n\
\t\timport sys \n\
\t\timport base64 \n\
\n\
\t\trequest = urllib2.Request(uri) \n\
\n\
\t\t# provide credentials if they&apos;re established \n\
\t\tif self.user and self.password: \n\
\t\t\tbase64string = base64.encodestring(&apos;%s:%s&apos; % (self.user, self.password))[:-1] \n\
\t\t\tauthheader =  "Basic %s" % base64string \n\
\t\t\trequest.add_header("Authorization", authheader) \n\
\n\
\t\ttry: \n\
\t\t\tresponse = urllib2.urlopen(request, post_args).read() \n\
\t\texcept urllib2.HTTPError, e: \n\
{0} \n\
\t\t\tsys.exit("HTTP error: %d" % e.code) \n\
\t\texcept urllib2.URLError, e: \n\
\t\t\tsys.exit("Network error: %s" % e.reason.args[1]) \n\
\n\
\t\treturn response \n\
\n\

# define a Python file
defFile = # This file has been auto-generated by REST Compile. \n\
# \n\
# You should not modify it, unless you know what you do. Any modification \n\
# might cause serious damage, or even destroy your computer. \n\
# \n\
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot; \n\
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n\
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \n\
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n\
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n\
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n\
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n\
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \n\
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \n\
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \n\
# POSSIBILITY OF SUCH DAMAGE. \n\
# \n\
{0}\n

# define a class
defClass = \n# class auto-generated by REST Compile \n\
class {0}(RestRequest): \n\
\t&quot;&quot;&quot;request class responsable for creating a request object&quot;&quot;&quot;\n\
\n\
\t# init function \n\
\tdef __init__(self, {1}): \n\
\t\t# initialize the super class \n\
\t\tRestRequest.__init__(self, ) \n\
\n\
\t\t# assign class variables \n\
{2} \
\n\
\t# prepares the POST or GET parameters \n\
\tdef prepare_params(self): \n\
\t\timport urllib \n\
\n\
\t\tparams = &#123;&#125; \n\
{3} \n\
\n\
\t\treturn urllib.urlencode(params) \n\
\n\
\t# submits the request \n\
\tdef submit(self): \n\
\n\
{4} \n\
\n\